services:
  
  db:
    container_name: db
    hostname: db
    image: postgres
    ports:
      - ${POSTGRES_LOCAL_PORT}:${POSTGRES_PORT}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
  
  mongodb:
    container_name: mongodb
    hostname: mongodb
    image: mongo
    ports:
      - ${MONGODB_LOCAL_PORT}:${MONGODB_PORT}
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
  
  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - ${RABBITMQ_LOCAL_PORT}:${RABBITMQ_PORT}
  
  web-api:
    container_name: web-api
    build:
      context: .
      dockerfile: DotnetExam/Dockerfile
    environment:
      ConnectionStrings__Postgres: Host=db;Port=${POSTGRES_PORT};Username=${POSTGRES_USERNAME};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
      ConnectionStrings__MongoDb: mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:${MONGODB_PORT}
      Frontend__Url: ${FRONTEND_URL}
      RabbitConfig__Host: rabbitmq
      RabbitConfig__Username: rabbit
      RabbitConfig__Password: 123456
    ports:
      - ${API_HTTP_PORT}:8080
    depends_on:
      - db
      - mongodb
      - rabbitmq